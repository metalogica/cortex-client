{
  "version": 3,
  "sources": ["../src/cortex-client.ts", "../src/index.ts"],
  "sourcesContent": ["class CortexClient {\n  constructor(options: CortexClient) {\n    console.log('cortex client class fired', options);\n\n    this.clientId = options.clientId;\n    this.clientSecret = options.clientSecret;\n\n    this.headset = options.headset;\n\n    this.ws = new WebSocket(options.url);\n  }\n\n  async stream() {\n    const cortexToken = await this._getCortexToken();\n    const sessionId = await this._getSessionId({cortexToken});\n\n    const message = {\n      id: 1,\n      jsonrpc: '2.0',\n      method: 'subscribe',\n      params: {\n        cortexToken,\n        sessionId,\n        streams: ['com'],\n      },\n    };\n\n    await this._send({message});\n  }\n\n  async _send({message}) {\n    await this.ws.send(JSON.stringify(message));\n  }\n\n  async _getCortexToken() {\n    const message = {\n      id: 1,\n      jsonrpc: '2.0',\n      method: 'authorize',\n      params: {\n        clientId: this.clientId,\n        clientSecret: this.clientSecret,\n        debit: 1,\n      },\n    };\n  }\n\n  async _getSessionId({cortexToken}) {\n    const message = {\n      id: 1,\n      jsonrpc: '2.0',\n      method: 'createSession',\n      params: {\n        cortexToken,\n        clientId: this.clientId,\n        clientSecret: this.clientSecret,\n        headset: this.headset,\n        status: 'active',\n      },\n    };\n  }\n}\n\nexport default (options: CortexClient) => new CortexClient(options);\n", "import cortexClient from './cortex-client';\n\nconst ws = new WebSocket('wss://localhost:6868');\n\nws.addEventListener('open', () => {\n  const cortex = cortexClient({\n    headset: 'test',\n  });\n  console.log(cortex);\n\n  ws.send(\n    JSON.stringify({\n      id: 1,\n      jsonrpc: 2.0,\n      method: 'getUserLogin',\n    })\n  );\n});\n\nconsole.log('main script completed.');\n"],
  "mappings": "gOAAA,GAAM,GAAN,KAAmB,CACjB,YAAY,EAAuB,CACjC,QAAQ,IAAI,4BAA6B,CAAO,EAEhD,KAAK,SAAW,EAAQ,SACxB,KAAK,aAAe,EAAQ,aAE5B,KAAK,QAAU,EAAQ,QAEvB,KAAK,GAAK,GAAI,WAAU,EAAQ,GAAG,CACrC,CAEA,AAAM,QAAS,gCACb,GAAM,GAAc,KAAM,MAAK,gBAAgB,EACzC,EAAY,KAAM,MAAK,cAAc,CAAC,aAAW,CAAC,EAElD,EAAU,CACd,GAAI,EACJ,QAAS,MACT,OAAQ,YACR,OAAQ,CACN,cACA,YACA,QAAS,CAAC,KAAK,CACjB,CACF,EAEA,KAAM,MAAK,MAAM,CAAC,SAAO,CAAC,CAC5B,GAEA,AAAM,MAAM,EAAW,mCAAX,CAAC,WAAU,CACrB,KAAM,MAAK,GAAG,KAAK,KAAK,UAAU,CAAO,CAAC,CAC5C,GAEA,AAAM,iBAAkB,gCACtB,GAAM,GAAU,CACd,GAAI,EACJ,QAAS,MACT,OAAQ,YACR,OAAQ,CACN,SAAU,KAAK,SACf,aAAc,KAAK,aACnB,MAAO,CACT,CACF,CACF,GAEA,AAAM,cAAc,EAAe,mCAAf,CAAC,eAAc,CACjC,GAAM,GAAU,CACd,GAAI,EACJ,QAAS,MACT,OAAQ,gBACR,OAAQ,CACN,cACA,SAAU,KAAK,SACf,aAAc,KAAK,aACnB,QAAS,KAAK,QACd,OAAQ,QACV,CACF,CACF,GACF,EAEO,EAAQ,AAAC,GAA0B,GAAI,GAAa,CAAO,EC7DlE,GAAM,GAAK,GAAI,WAAU,sBAAsB,EAE/C,EAAG,iBAAiB,OAAQ,IAAM,CAChC,GAAM,GAAS,EAAa,CAC1B,QAAS,MACX,CAAC,EACD,QAAQ,IAAI,CAAM,EAElB,EAAG,KACD,KAAK,UAAU,CACb,GAAI,EACJ,QAAS,EACT,OAAQ,cACV,CAAC,CACH,CACF,CAAC,EAED,QAAQ,IAAI,wBAAwB",
  "names": []
}
